plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ['-Xjvm-default=compatibility']
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation project(path: ':utils')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:' + firebaseBoMVersion)
    // Declare the dependency for the Cloud Firestore and Authentication libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    api 'com.google.firebase:firebase-firestore'
    api 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-functions'
    implementation 'com.google.firebase:firebase-storage'

    // AndroidX Test - JVM testing - for local tests where you need simulated Android framework
    testImplementation 'androidx.test.ext:junit:' + androidXTestExtRunnerVersion
    testImplementation 'androidx.test:core:' + androidXTestCoreVersion
    testImplementation 'org.robolectric:robolectric:' + robolectricVersion

    // Mockito framework
    testImplementation 'org.mockito:mockito-core:' + mockitoVersion

    api project(':utils')
}