package io.github.cchristou3.CyParking.ui.helper;

import android.content.Context;
import android.graphics.PorterDuff;

import androidx.annotation.ColorRes;

import com.google.android.material.tabs.TabLayout;

import org.jetbrains.annotations.NotNull;

import io.github.cchristou3.CyParking.R;
import io.github.cchristou3.CyParking.ui.views.user.login.AuthenticatorAdapter;

/**
 * Purpose: encapsulate logic related to styling the tabs
 * throughout their lifecycle (from initialization to selected and deselected).
 *
 * @author Charalambos Christou
 * @version 2.0 27/02/21
 */
public class TabHelper { /* default constructor generated by the compiler */

    /**
     * Initialize the tab's icon and text.
     * Also set its label visibility to
     * {@link TabLayout#TAB_LABEL_VISIBILITY_LABELED}
     * and highlight the color of the first tab (as it is the
     * selected one).
     *
     * @param context  The context to make use of.
     * @param tab      A tab.
     * @param position The position of the tab.
     */
    public void initializeTab(Context context, @NotNull TabLayout.Tab tab, int position) {
        switch (position) {
            case AuthenticatorAdapter.LOGIN_TAB:
                tab.setIcon(R.drawable.ic_log_in);
                tab.setText(context.getString(R.string.sign_in));
                updateTabIcon(context, tab, R.color.teal_200);
                break;

            case AuthenticatorAdapter.REGISTRATION_TAB:
                tab.setIcon(R.drawable.ic_register);
                tab.setText(context.getString(R.string.sign_up));
                break;
        }
        tab.setTabLabelVisibility(TabLayout.TAB_LABEL_VISIBILITY_LABELED);
    }

    /**
     * Change the tab's icon color to the given color res id.
     *
     * @param context  The context to make use of.
     * @param tab      A tab.
     * @param colourId The id of the colour to chnage the tab's icon to.
     */
    public void updateTabIcon(Context context, @NotNull TabLayout.Tab tab, @ColorRes int colourId) {
        if (tab.getIcon() == null) return;
        tab.getIcon().setColorFilter(
                context.getResources().getColor(colourId, context.getTheme()), PorterDuff.Mode.SRC_IN
        );
    }

    /**
     * Create an {@link TabLayout.OnTabSelectedListener}.
     * onTabSelected: the tab's icon gets highlighted.
     * onTabUnselected: the tab's icon reverts back to its normal color.
     *
     * @param context The context to make use of.
     * @return An instance of {@link TabLayout.OnTabSelectedListener}.
     */
    public TabLayout.OnTabSelectedListener getOnTabSelectedListener(Context context) {
        return new TabLayout.OnTabSelectedListener() {
            @Override
            public void onTabSelected(TabLayout.Tab tab) {
                updateTabIcon(context, tab, R.color.teal_200);
            }

            @Override
            public void onTabUnselected(TabLayout.Tab tab) {
                updateTabIcon(context, tab, R.color.white);
            }

            @Override
            public void onTabReselected(TabLayout.Tab tab) { /* ignore */ }
        };
    }
}
